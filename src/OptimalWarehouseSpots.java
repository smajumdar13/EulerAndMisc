// Amazon coding question
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

// Number of feasible points in x-axis where the warehouse can be placed from supply points that satisfies the given distance.
// Distance is calculated from the warehouse to the supplier back to the warehouse,
// i.e. if warehouse is at 0 and supplier at 2, distance is 0->2 and back 2->0 i.e. 4
public class OptimalWarehouseSpots {
    // suppliers {-3, 0 , 2, 4} distance 22
    // working
    public static int optimalWarehouseSpots(List<Integer> list, int dist) {
        int tempDist;
        int negTempDist;
        List<Integer> tempArr = new ArrayList<>();
        for (int i = 0, k = -1; i < dist/2; i++, k--) {
            tempDist = 0;
            negTempDist = 0;
            for (int j : list) {
                tempDist += Math.abs(i - j);
                negTempDist += Math.abs(k - j);
            }
            if (tempDist*2 <= dist) {
                tempArr.add(i);
            }
            if (negTempDist*2 <= dist) {
                tempArr.add(k);
            }
        }
        Collections.sort(tempArr);
        for (int i : tempArr) {
            System.out.println(i);
        }
        return tempArr.size();
    }

    public static int feasibleSpots(List<Integer> spots, int distance) {
        int tempDist = 0;
        int pos = 0;
        int negTempDist = 0;
        List<Integer> tempList = new ArrayList<>();
        while (tempDist <= distance) {
            {
                for (Integer i : spots) {
                    tempDist += Math.abs(pos - i) * 2;
                    negTempDist += Math.abs(pos - 1 - i) * 2;
                }
                if (tempDist <= distance) {
                    tempList.add(tempDist);
                } if (negTempDist <= distance){
                    tempList.add(negTempDist);
                } else {
                    break;
                }
                pos++;
                tempDist = 0;
                negTempDist = 0;
            }
        }
        for (int i : tempList) {
            System.out.println(i);
        }
        return tempList.size();
    }

    public static void main(String[] args) {
//        List<Integer> list = List.of(-3, 0, 2, 4); // dist 22 from question
        // -2 -1 0 1 2 3
        List<Integer> list = List.of(-1, 1, 2);

        System.out.println("Total spots: " + optimalWarehouseSpots(list, 14));
    }


}
